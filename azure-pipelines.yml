trigger:
- mainline

jobs:
- job: formatting_check
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true
  - checkout: self
  - task: Bash@3
    inputs:
      targetType: 'filePath'
      filePath: ops/run-formatting-check.sh
- job: linux_build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - task: Bash@3
    inputs:
      targetType: 'filePath'
      filePath: ops/build-linux.sh
    env:
      COMMIT_ID: $(Build.SourceVersion)
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'python_linux_whl'
      targetPath: 'python/dist/'
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'runtime_python_linux_whl'
      targetPath: 'runtime/python/dist/'
- job: win_build
  pool:
    vmImage: 'windows-2019'
  steps:
  - checkout: self
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: 'Add conda to PATH'
  - script: call .\ops\build-windows-part1.bat
  - task: MSBuild@1
    inputs:
      solution: 'build/*.sln'
      msbuildArchitecture: 'x64'
      msbuildArguments: '/p:Configuration=Release /m /nodeReuse:false'
    displayName: 'Building Treelite...'
  - script: call .\ops\build-windows-part2.bat
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'python_win_whl'
      targetPath: 'python/dist/'
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'runtime_python_win_whl'
      targetPath: 'runtime/python/dist/'
- job: cpp_python_coverage
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true
  - checkout: self
  - task: Bash@3
    inputs:
      targetType: 'filePath'
      filePath: ops/cpp-python-coverage.sh
    env:
      CODECOV_TOKEN: afe9868c-2c27-4853-89fa-4bc5d3d2b255
- job: win_python_coverage
  pool:
    vmImage: 'windows-2019'
  steps:
  - checkout: self
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: 'Add conda to PATH'
  - script: .\ops\win-python-coverage-part1.bat
  - task: MSBuild@1
    inputs:
      solution: 'build/*.sln'
      msbuildArchitecture: 'x64'
      msbuildArguments: '/p:Configuration=Release /m /nodeReuse:false'
    displayName: 'Building Treelite...'
  - script: .\ops\win-python-coverage-part2.bat
    env:
      WORKING_DIR: '$(System.DefaultWorkingDirectory)'
      PYTHONPATH: '$(System.DefaultWorkingDirectory)\python;$(System.DefaultWorkingDirectory)\runtime\python;$(PYTHONPATH)'
      CODECOV_TOKEN: afe9868c-2c27-4853-89fa-4bc5d3d2b255
- job: java_coverage
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true
  - checkout: self
  - task: Bash@3
    inputs:
      targetType: 'filePath'
      filePath: ops/java-coverage.sh
    env:
      JAVA_HOME: $(JAVA_HOME_8_X64)
      PATH: $(JAVA_HOME_8_X64)/bin:$(PATH)
      CODECOV_TOKEN: afe9868c-2c27-4853-89fa-4bc5d3d2b255
- job: linux_python_wheel_test
  dependsOn: linux_build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true
  - checkout: self
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'python_linux_whl'
      targetPath: $(System.DefaultWorkingDirectory)/main
    displayName: 'Downloading Treelite Python wheel for Linux...'
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'runtime_python_linux_whl'
      targetPath: $(System.DefaultWorkingDirectory)/runtime
    displayName: 'Downloading Treelite runtime Python wheel for Linux...'
  - task: Bash@3
    inputs:
      targetType: 'filePath'
      filePath: ops/test-linux-python-wheel.sh
    env:
      AWS_ACCESS_KEY_ID: $(S3UPLOAD_AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(S3UPLOAD_AWS_SECRET_ACCESS_KEY)
- job: win_python_wheel_test
  dependsOn: win_build
  pool:
    vmImage: 'windows-2019'
  steps:
  - checkout: self
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: 'Add conda to PATH'
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'python_win_whl'
      targetPath: $(System.DefaultWorkingDirectory)/main
    displayName: 'Downloading Treelite Python wheel for Windows...'
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'runtime_python_win_whl'
      targetPath: $(System.DefaultWorkingDirectory)/runtime
    displayName: 'Downloading Treelite runtime Python wheel for Windows...'
  - script: call ops/test-win-python-wheel.bat
    env:
      WORKING_DIR: $(System.DefaultWorkingDirectory)
      COMMIT_ID: $(Build.SourceVersion)
      AWS_ACCESS_KEY_ID: $(S3UPLOAD_AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(S3UPLOAD_AWS_SECRET_ACCESS_KEY)
