FROM centos:7
LABEL maintainer "DMLC"

# Install all basic requirements
RUN \
    yum install -y epel-release centos-release-scl && \
    yum-config-manager --enable centos-sclo-rh-testing && \
    yum -y update && \
    yum install -y tar unzip wget xz git yum-utils which ninja-build devtoolset-8-gcc devtoolset-8-binutils devtoolset-8-gcc-c++ && \
    # Python
    wget -nv https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/python && \
    # CMake
    wget -nv https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.sh --no-check-certificate && \
    bash cmake-3.16.0-Linux-x86_64.sh --skip-license --prefix=/usr

ENV PATH=/opt/python/bin:$PATH
ENV CC=/opt/rh/devtoolset-8/root/usr/bin/gcc
ENV CXX=/opt/rh/devtoolset-8/root/usr/bin/c++
ENV CPP=/opt/rh/devtoolset-8/root/usr/bin/cpp

# Install Python packages
RUN \
    conda install -y -c conda-forge python=3.8 numpy pytest scipy scikit-learn wheel pandas pip

ENV GOSU_VERSION 1.10

# Install lightweight sudo (not bound to TTY)
RUN set -ex; \
    wget -nv -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64" && \
    chmod +x /usr/local/bin/gosu && \
    gosu nobody true

# Default entry-point to use if running locally
# It will preserve attributes of created files
COPY entrypoint.sh /scripts/

WORKDIR /workspace
ENTRYPOINT ["/scripts/entrypoint.sh"]
